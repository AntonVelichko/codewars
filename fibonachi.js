
// 3. Последовательность Фибоначчи: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34,...
// Создайте функцию, которая получает число n и
// возвращает последовательность n чисел Фибоначчи

function fibonacci(n){
    if (n === 0) return [];
    if (n === 1) return [0];
    const arr = [0, 1];
    for (let i = 2; i < n; i++){    // 2 3
        arr.push(arr[i-2] + arr[i-1]) // [0, 1, 1, 2]
    }
    return arr;
}

console.log(fibonacci(10)); //[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


//4. Последовательность Фибоначчи: [0,1,1,2,3,5,8,13,21,34]...
//  Создайте функцию, которая получает число n и возвращает
//  n -ое число Фибоначчи
//  Например, n = 4 ---> результат: 2

function nthFibonacci(n){
    const arr = [0, 1];
    for (let i = 2; i < n; i++){
        arr.push(arr[i-2] + arr[i-1]);
    }
    return arr[n-1];
}

console.log(nthFibonacci(10)); // 34
console.log(nthFibonacci(1));  //  0
console.log(nthFibonacci(0));  //  undefined

// Эти задачи в codewars:
//https://www.codewars.com/kata/522551eee9abb932420004a0
//https://www.codewars.com/kata/52549d3e19453df56f0000fe


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


// 5. Получить n - ое число последовательности Фибоначчи : 0,1,1,2,3,5,8,...
// без создания массива. Например, n = 5 ---> результат: 3

function nthFib(n){   // n = 1  --> 0  n = 2 ---> 1
    if (n <= 2) return n - 1;
    let f0 = 0;               //0
    let f1 = 1;               //1
    let f2;                   //-
    let i = 3;                //2
    while ( i <= n){           //2<4     3 < 4      4 < 4
        f2 = f0 + f1;           //0+1=1   1 + 1 = 2
        f0 = f1;                //1       1
        f1 = f2;                //1       2
        i++;                    //3       4
    }
    return f2;
}
console.log(nthFib(6)); //5


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


//6. Последовательность Фибоначчи: 0,1,1,2,3,5,8,13,21,34,...
// Создайте функцию fibonacciString, которая получает число n,
// формирует строку из чисел '01123581321345589...'
// Фиббоначчи и возвращает n-ый по счету символ этой строки(не символ с индексом n)
// Например, 5-ый символ - это "3"

function fibonacciString(n){
    let str = '01';
    let f0 = 0;
    let f1 = 1;
    let f2;
    for(let i = 3; i <= n; i++){
        f2 = f0 + f1;
        f0 = f1;
        f1 = f2;
        str = str + f2;
    }
    return str[n-1];
}

console.log(fibonacciString(5)); //3
console.log(fibonacciString(7)); //8
console.log(fibonacciString(10)); //2


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


//8 Simple fibonacci strings
// Напишите функцию, возвращающую n-e число fn

function solve(n){
    f0 = '0'
    f1 = '01'
    f2 =  f1 + f0 =  '010'
    f3  = f2 + f1 = '01001'
    f4  = f3 + f2 = '01001' + '010' = '01001010'
}

console.log(solve(5)); // '0100101001001'

// Эта задача в codewars:
// https://www.codewars.com/kata/5aa39ba75084d7cf45000008

